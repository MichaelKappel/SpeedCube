!function(t){const e=t.System.constructor.prototype,n=[[],function(){return{}}];function r(){throw Error("AMD require not supported.")}let o;function s(){}const i=["require","exports","module"];function u(t,e){const n={},o={exports:n},s=[],i=[];let u=0;for(let e=0;e<t.length;e++){const f=t[e],c=i.length;if("require"===f)s[e]=r,u++;else if("module"===f)s[e]=o,u++;else if("exports"===f)s[e]=n,u++;else{const t=e;i.push(function(e){s[t]=e.__useDefault?e.default:e})}u&&(t[c]=f)}u&&(t.length-=u);const f=e;return[t,function(t){return t({default:n,__useDefault:!0}),{setters:i,execute:function(){o.exports=f.apply(n,s)||o.exports,n!==o.exports&&t("default",o.exports)}}}]}let f;const c=e.register;e.register=function(t,e,n){f="string"==typeof t?n:e,c.apply(this,arguments)};const l=e.instantiate;e.instantiate=function(){return g=null,l.apply(this,arguments)};const p=e.getRegister;let g,a;function y(t,e){o=e,System.registerRegistry[t]=System.getRegister(),o=null}e.getRegister=function(){if(o)return o;const t=p.call(this);if(t&&t[1]===f)return t;if(!g)return t||n;const e=u(g,a);return g=null,e},t.define=function(t,e,n){if("string"==typeof t){if(g){if(!System.registerRegistry)throw Error("Include the named register extension for SystemJS named AMD support.");return y(t,u(e,n)),g=[],void(a=s)}System.registerRegistry&&y(t,u([].concat(e),n)),t=e,e=n}t instanceof Array?(g=t,a=e):"object"==typeof t?(g=[],a=function(){return t}):"function"==typeof t&&(g=i,a=t)},t.define.amd={}}("undefined"!=typeof self?self:global);